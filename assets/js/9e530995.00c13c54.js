"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[5089],{876:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>v});var o=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,v=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return n?o.createElement(v,a(a({ref:t},d),{},{components:n})):o.createElement(v,a({ref:t},d))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5155:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var o=n(7896),r=(n(2784),n(876));const i={sidebar_position:5},a="Math",l={unversionedId:"programming/vision_elements/basics/math",id:"programming/vision_elements/basics/math",title:"Math",description:"Functions related to mathematics and algebra operations.",source:"@site/docs/programming/4_vision_elements/1_basics/5-math.md",sourceDirName:"programming/4_vision_elements/1_basics",slug:"/programming/vision_elements/basics/math",permalink:"/onevision/docs/programming/vision_elements/basics/math",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"programmingSidebar",previous:{title:"Copy",permalink:"/onevision/docs/programming/vision_elements/basics/copy"},next:{title:"Probabilities",permalink:"/onevision/docs/programming/vision_elements/basics/probabilities"}},c={},s=[{value:"<code>normalizeRect()</code>",id:"normalizerect",level:3},{value:"<code>normalizeEllipse()</code>",id:"normalizeellipse",level:3},{value:"<code>normalizeVector()</code>",id:"normalizevector",level:3},{value:"<code>addVectors()</code>",id:"addvectors",level:3},{value:"<code>addPoints()</code>",id:"addpoints",level:3},{value:"<code>subVectors()</code>",id:"subvectors",level:3},{value:"<code>subPoints()</code>",id:"subpoints",level:3},{value:"<code>dotProduct()</code>",id:"dotproduct",level:3},{value:"<code>crossProduct()</code>",id:"crossproduct",level:3},{value:"<code>roundDecimal()</code>",id:"rounddecimal",level:3},{value:"<code>roundDecimalPath()</code>",id:"rounddecimalpath",level:3}],d={toc:s},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"math"},"Math"),(0,r.kt)("p",null,"Functions related to mathematics and algebra operations."),(0,r.kt)("h3",{id:"normalizerect"},(0,r.kt)("inlineCode",{parentName:"h3"},"normalizeRect()")),(0,r.kt)("p",null,"Returns an equivalent rectangle with angle in the range ","[-45, 45]"," degrees."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"function normalizeRect(rect: Rect2d): Rect2d;\n")),(0,r.kt)("h3",{id:"normalizeellipse"},(0,r.kt)("inlineCode",{parentName:"h3"},"normalizeEllipse()")),(0,r.kt)("p",null,"Returns an equivalent ellipse with angle in the range ","[-45, 45]"," degrees."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"function normalizeEllipse(ellipse: Ellipse2d): Ellipse2d;\n")),(0,r.kt)("h3",{id:"normalizevector"},(0,r.kt)("inlineCode",{parentName:"h3"},"normalizeVector()")),(0,r.kt)("p",null,"Returns a new vector with norm equal to 1, with the same direction as the input vector."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"function normalizeVector(vector: Vector2d): Vector2d;\n")),(0,r.kt)("h3",{id:"addvectors"},(0,r.kt)("inlineCode",{parentName:"h3"},"addVectors()")),(0,r.kt)("p",null,"Returns the sum of two vectors as a new vector."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"function addVectors(vector1: Vector2d, vector2: Vector2d): Vector2d;\n")),(0,r.kt)("h3",{id:"addpoints"},(0,r.kt)("inlineCode",{parentName:"h3"},"addPoints()")),(0,r.kt)("p",null,"Returns the sum of two points as a new point."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"function addPoints(point1: Point2d, point2: Point2d): Point2d;\n")),(0,r.kt)("h3",{id:"subvectors"},(0,r.kt)("inlineCode",{parentName:"h3"},"subVectors()")),(0,r.kt)("p",null,"Returns the subtraction of two vectors as a new vector."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"function subVectors(vector1: Vector2d, vector2: Vector2d): Vector2d;\n")),(0,r.kt)("h3",{id:"subpoints"},(0,r.kt)("inlineCode",{parentName:"h3"},"subPoints()")),(0,r.kt)("p",null,"Returns the subtraction of two points as a new point."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"function subPoints(point1: Point2d, point2: Point2d): Point2d;\n")),(0,r.kt)("h3",{id:"dotproduct"},(0,r.kt)("inlineCode",{parentName:"h3"},"dotProduct()")),(0,r.kt)("p",null,"Returns the dot product of two vectors."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"function dotProduct(vector1: Vector2d, vector2: Vector2d): number;\n")),(0,r.kt)("h3",{id:"crossproduct"},(0,r.kt)("inlineCode",{parentName:"h3"},"crossProduct()")),(0,r.kt)("p",null,"Returns the norm of the cross product of two vectors. The norm is positive if the cross product is in the direction of the z-axis, negative if it is in the opposite direction, and zero if the vectors are parallel or anti-parallel"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"function crossProduct(vector1: Vector2d, vector2: Vector2d): number;\n")),(0,r.kt)("h3",{id:"rounddecimal"},(0,r.kt)("inlineCode",{parentName:"h3"},"roundDecimal()")),(0,r.kt)("p",null,"Rounds a floating point number to a given number of decimal places"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"function roundDecimal(value: number, decimalPlaces: number): number;\n")),(0,r.kt)("h3",{id:"rounddecimalpath"},(0,r.kt)("inlineCode",{parentName:"h3"},"roundDecimalPath()")),(0,r.kt)("p",null,"Rounds the coordinates of the every point in the path"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"function roundDecimalPath(path: Path2d, decimalPlaces: number): void;\n")))}u.isMDXComponent=!0}}]);