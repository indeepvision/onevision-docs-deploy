"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[2275],{876:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>v});var i=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(n),u=r,v=m["".concat(s,".").concat(u)]||m[u]||c[u]||a;return n?i.createElement(v,o(o({ref:t},d),{},{components:n})):i.createElement(v,o({ref:t},d))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5134:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=n(7896),r=(n(2784),n(876));const a={sidebar_position:1},o="Vision element base",l={unversionedId:"programming/vision_elements/elements/vision-element",id:"programming/vision_elements/elements/vision-element",title:"Vision element base",description:"The VisionElement class is the base class for all vision elements. All elements will have the functions defined in this class. All other vision elements inherit from this abstract class.",source:"@site/docs/programming/4_vision_elements/2_elements/1-vision-element.md",sourceDirName:"programming/4_vision_elements/2_elements",slug:"/programming/vision_elements/elements/vision-element",permalink:"/onevision/docs/programming/vision_elements/elements/vision-element",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"programmingSidebar",previous:{title:"Elements",permalink:"/onevision/docs/category/elements"},next:{title:"Vision element types",permalink:"/onevision/docs/programming/vision_elements/elements/vision-element-types"}},s={},p=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>getId()</code>",id:"getid",level:3},{value:"<code>getType()</code>",id:"gettype",level:3},{value:"<code>allocatedSize()</code>",id:"allocatedsize",level:3},{value:"<code>clone()</code>",id:"clone",level:3},{value:"<code>getParentId()</code>",id:"getparentid",level:3},{value:"<code>setParentId()</code>",id:"setparentid",level:3},{value:"<code>setParentId()</code>",id:"setparentid-1",level:3},{value:"<code>removeParentId()</code>",id:"removeparentid",level:3},{value:"<code>hasParent()</code>",id:"hasparent",level:3},{value:"<code>hasName()</code>",id:"hasname",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>name</code>",id:"name",level:3},{value:"<code>description</code>",id:"description",level:3},{value:"<code>type</code>",id:"type",level:3}],d={toc:p},m="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"vision-element-base"},"Vision element base"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"VisionElement")," class is the base class for all vision elements. All elements will have the functions defined in this class. All other vision elements inherit from this abstract class."),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("p",null,"This class is not constructible, it is only used as a base class for other vision elements."),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"getid"},(0,r.kt)("inlineCode",{parentName:"h3"},"getId()")),(0,r.kt)("p",null,"Returns a unique numeric identifier of this vision element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"getId(): number;\n")),(0,r.kt)("h3",{id:"gettype"},(0,r.kt)("inlineCode",{parentName:"h3"},"getType()")),(0,r.kt)("p",null,"Returns the type of the vision element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"getType(): EVisionElement;\n")),(0,r.kt)("h3",{id:"allocatedsize"},(0,r.kt)("inlineCode",{parentName:"h3"},"allocatedSize()")),(0,r.kt)("p",null,"Returns the approximate size of data allocated by this vision element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"allocatedSize(): number;\n")),(0,r.kt)("h3",{id:"clone"},(0,r.kt)("inlineCode",{parentName:"h3"},"clone()")),(0,r.kt)("p",null,"Method to clone the element. Returns it cast to the base class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"clone(): VisionElement;\n")),(0,r.kt)("h3",{id:"getparentid"},(0,r.kt)("inlineCode",{parentName:"h3"},"getParentId()")),(0,r.kt)("p",null,"Returns the parent ID of this vision element, or 0 if there is no parent ID."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"getParentId(): number;\n")),(0,r.kt)("h3",{id:"setparentid"},(0,r.kt)("inlineCode",{parentName:"h3"},"setParentId()")),(0,r.kt)("p",null,"Sets the parent ID providing the parent ID number."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"setParentId(parentId: number): void;\n")),(0,r.kt)("h3",{id:"setparentid-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"setParentId()")),(0,r.kt)("p",null,"Sets the parent ID providing the parent vision element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"setParentId(parentElement: VisionElement): void;\n")),(0,r.kt)("h3",{id:"removeparentid"},(0,r.kt)("inlineCode",{parentName:"h3"},"removeParentId()")),(0,r.kt)("p",null,"Returns true if the ID was removed, false if it was not present."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"removeParentId(): boolean;\n")),(0,r.kt)("h3",{id:"hasparent"},(0,r.kt)("inlineCode",{parentName:"h3"},"hasParent()")),(0,r.kt)("p",null,"Returns true if the parent ID is set."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"hasParent(): boolean;\n")),(0,r.kt)("h3",{id:"hasname"},(0,r.kt)("inlineCode",{parentName:"h3"},"hasName()")),(0,r.kt)("p",null,"Returns true if the name of the vision element is set."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"hasName(): boolean;\n")),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"name"},(0,r.kt)("inlineCode",{parentName:"h3"},"name")),(0,r.kt)("p",null,"Optional name of the vision element. By default it is an empty string."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"name: string;\n")),(0,r.kt)("h3",{id:"description"},(0,r.kt)("inlineCode",{parentName:"h3"},"description")),(0,r.kt)("p",null,"Optional description of the vision element. By default it is an empty string."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"description: string;\n")),(0,r.kt)("h3",{id:"type"},(0,r.kt)("inlineCode",{parentName:"h3"},"type")),(0,r.kt)("p",null,"The element type identifier."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-onevision"},"type: EVisionElement;\n")))}c.isMDXComponent=!0}}]);