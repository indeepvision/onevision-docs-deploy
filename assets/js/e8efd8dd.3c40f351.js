"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[7218],{876:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(2784);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var m=n.createContext({}),s=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(m.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,m=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(a),c=i,h=d["".concat(m,".").concat(c)]||d[c]||u[c]||r;return a?n.createElement(h,l(l({ref:t},p),{},{components:a})):n.createElement(h,l({ref:t},p))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=c;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},2858:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=a(7896),i=(a(2784),a(876));const r={sidebar_position:15},l="Image",o={unversionedId:"programming/vision_elements/elements/image",id:"programming/vision_elements/elements/image",title:"Image",description:"The Image class can contain any type of image, with many possible datatypes. It is derived from the VisionElement base class.",source:"@site/docs/programming/4_vision_elements/2_elements/15-image.md",sourceDirName:"programming/4_vision_elements/2_elements",slug:"/programming/vision_elements/elements/image",permalink:"/onevision/docs/programming/vision_elements/elements/image",draft:!1,tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"programmingSidebar",previous:{title:"Histogram",permalink:"/onevision/docs/programming/vision_elements/elements/histogram"},next:{title:"Line2d",permalink:"/onevision/docs/programming/vision_elements/elements/line2d"}},m={},s=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>pixelformat()</code>",id:"pixelformat",level:3},{value:"<code>width()</code>",id:"width",level:3},{value:"<code>height()</code>",id:"height",level:3},{value:"<code>setFrame()</code>",id:"setframe",level:3},{value:"<code>getFrame()</code>",id:"getframe",level:3},{value:"<code>setFrame()</code>",id:"setframe-1",level:3},{value:"<code>resetFrame()</code>",id:"resetframe",level:3},{value:"<code>byteSize()</code>",id:"bytesize",level:3},{value:"<code>numPixels()</code>",id:"numpixels",level:3},{value:"<code>numChannels()</code>",id:"numchannels",level:3},{value:"<code>bytesPerPixel()</code>",id:"bytesperpixel",level:3},{value:"<code>bitsPerPixel()</code>",id:"bitsperpixel",level:3},{value:"<code>depth()</code>",id:"depth",level:3},{value:"<code>copyBuffer()</code>",id:"copybuffer",level:3},{value:"<code>isValid()</code>",id:"isvalid",level:3},{value:"Props",id:"props",level:2},{value:"<code>timestamp</code>",id:"timestamp",level:3},{value:"<code>opacity</code>",id:"opacity",level:3},{value:"<code>color</code>",id:"color",level:3},{value:"<code>display</code>",id:"display",level:3},{value:"<code>normalize</code>",id:"normalize",level:3},{value:"<code>normalizeMin</code>",id:"normalizemin",level:3},{value:"<code>normalizeMax</code>",id:"normalizemax",level:3},{value:"<code>pixelformatStr</code>",id:"pixelformatstr",level:3}],p={toc:s},d="wrapper";function u(e){let{components:t,...a}=e;return(0,i.kt)(d,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"image"},"Image"),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Image")," class can contain any type of image, with many possible datatypes. It is derived from the ",(0,i.kt)("a",{parentName:"p",href:"./vision-element"},"VisionElement")," base class."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("p",null,"Empty constructor. Creates an invalid image."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"new Image(): Image;\n")),(0,i.kt)("p",null,"Create a valid image initialized with a uniform initial value."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"new Image(width: number, height: number, pixelformat: EPixelFormat, values?: number[]): Image;\n")),(0,i.kt)("p",null,"Create a valid image initialized with external data."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"new Image(width: number, height: number, pixelformat: EPixelFormat, data: ArrayBuffer): Image;\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"pixelformat"},(0,i.kt)("inlineCode",{parentName:"h3"},"pixelformat()")),(0,i.kt)("p",null,"Returns the pixel format of the image, as an enum value.\nSee ",(0,i.kt)("a",{parentName:"p",href:"../image/pixel-format#epixelformat"},"EPixelFormat")," for possible values."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"pixelformat(): EPixelFormat;\n")),(0,i.kt)("h3",{id:"width"},(0,i.kt)("inlineCode",{parentName:"h3"},"width()")),(0,i.kt)("p",null,"Returns the width of the image."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"width(): number;\n")),(0,i.kt)("h3",{id:"height"},(0,i.kt)("inlineCode",{parentName:"h3"},"height()")),(0,i.kt)("p",null,"Returns the height of the image."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"height(): number;\n")),(0,i.kt)("h3",{id:"setframe"},(0,i.kt)("inlineCode",{parentName:"h3"},"setFrame()")),(0,i.kt)("p",null,"Sets a new frame on the image, will throw if not valid."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"setFrame(frame: Rect2d): void;\n")),(0,i.kt)("h3",{id:"getframe"},(0,i.kt)("inlineCode",{parentName:"h3"},"getFrame()")),(0,i.kt)("p",null,"Returns a copy of the image frame."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"getFrame(): Rect2d;\n")),(0,i.kt)("h3",{id:"setframe-1"},(0,i.kt)("inlineCode",{parentName:"h3"},"setFrame()")),(0,i.kt)("p",null,"Sets a new frame on the image, will throw if not valid."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"setFrame(frame: Rect2d): void;\n")),(0,i.kt)("h3",{id:"resetframe"},(0,i.kt)("inlineCode",{parentName:"h3"},"resetFrame()")),(0,i.kt)("p",null,"Set frame size equal full image size."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"resetFrame(): void;\n")),(0,i.kt)("h3",{id:"bytesize"},(0,i.kt)("inlineCode",{parentName:"h3"},"byteSize()")),(0,i.kt)("p",null,"Returns the size of the image data in bytes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"byteSize(): number;\n")),(0,i.kt)("h3",{id:"numpixels"},(0,i.kt)("inlineCode",{parentName:"h3"},"numPixels()")),(0,i.kt)("p",null,"Returns the number of pixels in the image."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"numPixels(): number;\n")),(0,i.kt)("h3",{id:"numchannels"},(0,i.kt)("inlineCode",{parentName:"h3"},"numChannels()")),(0,i.kt)("p",null,"Returns the number of channels in the image."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"numChannels(): number;\n")),(0,i.kt)("h3",{id:"bytesperpixel"},(0,i.kt)("inlineCode",{parentName:"h3"},"bytesPerPixel()")),(0,i.kt)("p",null,"Returns the number of bytes per pixel of the current pixel format."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"bytesPerPixel(): number;\n")),(0,i.kt)("h3",{id:"bitsperpixel"},(0,i.kt)("inlineCode",{parentName:"h3"},"bitsPerPixel()")),(0,i.kt)("p",null,"Returns the number of bits per pixel of the current pixel format."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"bytesPerPixel(): number;\n")),(0,i.kt)("h3",{id:"depth"},(0,i.kt)("inlineCode",{parentName:"h3"},"depth()")),(0,i.kt)("p",null,"Returns the depth of the image's pixel format.\nSee ",(0,i.kt)("a",{parentName:"p",href:"../image/pixel-format#epixeldepth"},"EPixelDepth")," for possible values."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"depth(): EPixelDepth;\n")),(0,i.kt)("h3",{id:"copybuffer"},(0,i.kt)("inlineCode",{parentName:"h3"},"copyBuffer()")),(0,i.kt)("p",null,"Returns a copy of the raw data as an array buffer that can be cast into a data view depending on the underlying type of the image"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"copyBuffer(): ArrayBuffer;\n")),(0,i.kt)("h3",{id:"isvalid"},(0,i.kt)("inlineCode",{parentName:"h3"},"isValid()")),(0,i.kt)("p",null,"Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the data contained in the image represents a valid image"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"isValid(): boolean;\n")),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("h3",{id:"timestamp"},(0,i.kt)("inlineCode",{parentName:"h3"},"timestamp")),(0,i.kt)("p",null,"The timestamp of the image in nanoseconds. This is useful for images captured by a camera, where this field is set to the time the image was captured."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"timestamp: number;\n")),(0,i.kt)("h3",{id:"opacity"},(0,i.kt)("inlineCode",{parentName:"h3"},"opacity")),(0,i.kt)("p",null,"The opacity of the image, from 0 to 1. This will affect the transparency of the image when displayed."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"opacity: number;\n")),(0,i.kt)("h3",{id:"color"},(0,i.kt)("inlineCode",{parentName:"h3"},"color")),(0,i.kt)("p",null,"The color of the image. This is a string in the format ",(0,i.kt)("inlineCode",{parentName:"p"},"#RRGGBB"),". Where ",(0,i.kt)("inlineCode",{parentName:"p"},"RR"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"GG"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"BB")," are the red, green, and blue components of the color, respectively.\nThis will affect the color of the image when displayed in some display modes. See ",(0,i.kt)("a",{parentName:"p",href:"#display"},"display"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"color: string;\n")),(0,i.kt)("h3",{id:"display"},(0,i.kt)("inlineCode",{parentName:"h3"},"display")),(0,i.kt)("p",null,"The display mode of the image determines how the image will be displayed. It is a read/write enum value.\nSee ",(0,i.kt)("a",{parentName:"p",href:"../types#eimagedisplay"},"EImageDisplay")," for possible values."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"display: EImageDisplay;\n")),(0,i.kt)("h3",{id:"normalize"},(0,i.kt)("inlineCode",{parentName:"h3"},"normalize")),(0,i.kt)("p",null,"The normalize mode of the image determines how the image will be normalized before it is displayed. The normalization doesn't affect the image data, only the way it is displayed. It is a read/write enum value.\nSee ",(0,i.kt)("a",{parentName:"p",href:"../types#eimagenormalize"},"EImageNormalize")," for possible values."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"normalize: EImageNormalize;\n")),(0,i.kt)("h3",{id:"normalizemin"},(0,i.kt)("inlineCode",{parentName:"h3"},"normalizeMin")),(0,i.kt)("p",null,"The minimum value for normalization. This is used when the ",(0,i.kt)("a",{parentName:"p",href:"#normalize"},"normalize")," prop is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"Manual"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"normalizeMin: number;\n")),(0,i.kt)("h3",{id:"normalizemax"},(0,i.kt)("inlineCode",{parentName:"h3"},"normalizeMax")),(0,i.kt)("p",null,"The maximum value for normalization. This is used when the ",(0,i.kt)("a",{parentName:"p",href:"#normalize"},"normalize")," prop is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"Manual"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"normalizeMax: number;\n")),(0,i.kt)("h3",{id:"pixelformatstr"},(0,i.kt)("inlineCode",{parentName:"h3"},"pixelformatStr")),(0,i.kt)("p",null,"Auxiliary read-only pixel format as a string, for debugging purposes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"pixelformatStr: string;\n")))}u.isMDXComponent=!0}}]);