"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[303],{876:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var r=n(2784);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,b=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(b,a(a({ref:t},c),{},{components:n})):r.createElement(b,a({ref:t},c))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},374:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7896),i=(n(2784),n(876));const o={sidebar_position:21},a="Probability",l={unversionedId:"programming/vision_elements/elements/probability",id:"programming/vision_elements/elements/probability",title:"Probability",description:"The Probability class contains a dictionary of classes represented by a string and their corresponding probabilities. It is derived from the VisionElement base class.",source:"@site/docs/programming/4_vision_elements/2_elements/21-probability.md",sourceDirName:"programming/4_vision_elements/2_elements",slug:"/programming/vision_elements/elements/probability",permalink:"/onevision/docs/programming/vision_elements/elements/probability",draft:!1,tags:[],version:"current",sidebarPosition:21,frontMatter:{sidebar_position:21},sidebar:"programmingSidebar",previous:{title:"Point2d",permalink:"/onevision/docs/programming/vision_elements/elements/point2d"},next:{title:"Types",permalink:"/onevision/docs/programming/vision_elements/types"}},s={},p=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>set()</code>",id:"set",level:3},{value:"<code>isDouble()</code>",id:"isdouble",level:3},{value:"Value",id:"value",level:2},{value:"<code>value</code>",id:"value-1",level:3}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"probability"},"Probability"),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Probability")," class contains a dictionary of classes represented by a string and their corresponding probabilities. It is derived from the ",(0,i.kt)("a",{parentName:"p",href:"./vision-element"},"VisionElement")," base class."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("p",null,"Empty constructor."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"new Probability(): Probability;\n")),(0,i.kt)("p",null,"Constructor with the initial probabilities."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"new Probability(classes: Record<string, number>): Probability;\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"set"},(0,i.kt)("inlineCode",{parentName:"h3"},"set()")),(0,i.kt)("p",null,"Set the dictionary of probabilities."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"set(classes: Record<string, number>): void;\n")),(0,i.kt)("h3",{id:"isdouble"},(0,i.kt)("inlineCode",{parentName:"h3"},"isDouble()")),(0,i.kt)("p",null,"Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the number is a floating point value."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"isDouble(): boolean;\n")),(0,i.kt)("h2",{id:"value"},"Value"),(0,i.kt)("h3",{id:"value-1"},(0,i.kt)("inlineCode",{parentName:"h3"},"value")),(0,i.kt)("p",null,"The numeric value."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-onevision"},"value: number;\n")))}m.isMDXComponent=!0}}]);